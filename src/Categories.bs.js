// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Cx from "rescript-classnames/src/Cx.bs.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Array from "bs-platform/lib/es6/belt_Array.js";
import * as Caml_array from "bs-platform/lib/es6/caml_array.js";
import * as Api$RescriptViteReactWindicss from "./api.bs.js";
import * as BbqIcon$RescriptViteReactWindicss from "./img/components/SVGSrc/img/bbqIcon.bs.js";
import * as BeachIcon$RescriptViteReactWindicss from "./img/components/SVGSrc/img/beachIcon.bs.js";

var categories = [
  {
    name: "Beach",
    namePl: "Beaches",
    icon: React.createElement(BeachIcon$RescriptViteReactWindicss.make, {
          width: "48px"
        })
  },
  {
    name: "Barbeque Spot",
    namePl: "Barbeque Spots",
    icon: React.createElement(BbqIcon$RescriptViteReactWindicss.make, {
          width: "48px"
        })
  }
];

function Categories$CategoriesHeader(Props) {
  return React.createElement("h2", {
              className: "text-gray-100 text-5xl"
            }, "Categories");
}

var CategoriesHeader = {
  make: Categories$CategoriesHeader
};

function Categories$CategoryButton(Props) {
  var category = Props.category;
  var active = Props.active;
  var setActiveCategory = Props.setActiveCategory;
  return React.createElement("button", {
              className: Cx.cx([
                    "p-2 mr-8 flex items-center justify-between rounded-xl border-2 bg-gradient-to-r transition duration-150",
                    active ? "from-hex-08ed97 to-hex-05f3cc" : "bg-hex-2a2e31",
                    active ? "ring-4 ring-teal-500 ring-opacity-20 border-transparent" : "border-hex-3d4144",
                    active ? "" : "hover:(border-hex-05f3cc)"
                  ]),
              onClick: (function (param) {
                  return Curry._1(setActiveCategory, (function (param) {
                                return category;
                              }));
                })
            }, React.createElement("span", {
                  className: Cx.cx([
                        "rounded-2xl p-1",
                        active ? "bg-hex-2a2e31" : "bg-gradient-to-r from-hex-08ed97 to-hex-05f3cc"
                      ])
                }, category.icon), React.createElement("span", {
                  className: Cx.cx([
                        "pl-4 font-bold text-lg",
                        active ? "text-gray-700" : "text-hex-b4b8ba"
                      ])
                }, category.name));
}

var CategoryButton = {
  make: Categories$CategoryButton
};

function Categories$CategoryPicker(Props) {
  var categories = Props.categories;
  var activeCategory = Props.activeCategory;
  var setActiveCategory = Props.setActiveCategory;
  var items = Belt_Array.map(categories, (function (category) {
          return React.createElement(Categories$CategoryButton, {
                      category: category,
                      active: activeCategory.name === category.name,
                      setActiveCategory: setActiveCategory,
                      key: category.name
                    });
        }));
  return React.createElement("div", {
              className: "p-0 flex"
            }, items);
}

var CategoryPicker = {
  make: Categories$CategoryPicker
};

function Categories$Card(Props) {
  var title = Props.title;
  var subtitle = Props.subtitle;
  var backgroundImage = Props.backgroundImage;
  var overlayColor = Props.overlayColor;
  return React.createElement("div", {
              className: "w-64 h-92 p-4 mr-8 rounded-xl bg-cover relative",
              style: {
                backgroundImage: "linear-gradient(#ffffff1A, " + overlayColor + "CC), url(" + backgroundImage + ")"
              }
            }, React.createElement("div", {
                  className: "absolute bottom-0 mb-4"
                }, React.createElement("h3", {
                      className: "text-gray-100 text-3xl m-0"
                    }, title), React.createElement("h4", {
                      className: "m-0"
                    }, subtitle)));
}

var Card = {
  make: Categories$Card
};

function Categories$Places$BeachCard(Props) {
  var beach = Props.beach;
  return React.createElement(Categories$Card, {
              title: beach.name,
              subtitle: React.createElement(React.Fragment, {
                    children: null
                  }, React.createElement("span", {
                        className: "text-2xl font-bold text-hex-27dfad"
                      }, "$" + String(beach.price) + "/"), React.createElement("span", {
                        className: "text-gray-100"
                      }, "person")),
              backgroundImage: beach.picture,
              overlayColor: "#197d62"
            });
}

var BeachCard = {
  make: Categories$Places$BeachCard
};

function Categories$Places(Props) {
  var activeCategory = Props.activeCategory;
  var match = React.useState(function () {
        return [];
      });
  var setItems = match[1];
  var itemCards = Belt_Array.map(match[0], (function (item) {
          return React.createElement(Categories$Places$BeachCard, {
                      beach: item,
                      key: item.name
                    });
        }));
  React.useEffect((function () {
          Curry._1(setItems, (function (param) {
                  return Api$RescriptViteReactWindicss.getItemsForCategory(activeCategory);
                }));
          
        }), [activeCategory]);
  return React.createElement("div", {
              className: "my-10"
            }, React.createElement("header", {
                  className: "flex justify-between items-end"
                }, React.createElement("h2", {
                      className: "text-gray-100 text-5xl m-0"
                    }, "Popular " + activeCategory.namePl), React.createElement("a", {
                      className: "text-hex-2b9072 no-underline text-lg font-bold",
                      href: "#"
                    }, "See all")), React.createElement("div", {
                  className: "mt-8 flex flex-wrap"
                }, itemCards));
}

var Places = {
  BeachCard: BeachCard,
  make: Categories$Places
};

function Categories(Props) {
  var match = React.useState(function () {
        return Caml_array.get(categories, 0);
      });
  var activeCategory = match[0];
  return React.createElement("div", undefined, React.createElement(Categories$CategoriesHeader, {}), React.createElement(Categories$CategoryPicker, {
                  categories: categories,
                  activeCategory: activeCategory,
                  setActiveCategory: match[1]
                }), React.createElement(Categories$Places, {
                  activeCategory: activeCategory
                }));
}

var make = Categories;

export {
  categories ,
  CategoriesHeader ,
  CategoryButton ,
  CategoryPicker ,
  Card ,
  Places ,
  make ,
  
}
/* categories Not a pure module */
